{"ast":null,"code":"import { all, fork, put, takeLatest, call, takeEvery } from 'redux-saga/effects';\nimport { SIGN_UP_REQUEST, LOG_IN_SUCCESS } from '../reducers/user';\nconst HELLO_SAGA = 'HELLO_SAGA';\nconst BYE_SAGA = 'BYE_SAGA';\n\nfunction loginAPI(loginData) {}\n\nfunction* login() {\n  try {\n    yield call(loginAPI);\n    yield put({\n      type: LOG_IN_SUCCESS\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({});\n  }\n}\n\nfunction* watchLogin() {\n  yield takeLatest(SIGN_UP_REQUEST, login);\n}\n\nfunction* watchHello() {\n  yield takeEvery(HELLO_SAGA, function* () {\n    yield put({\n      type: BYE_SAGA\n    });\n  });\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogin), fork(watchHello)]);\n}","map":{"version":3,"sources":["/Users/anjoy/popolpodopolapo/proj-blog-anjoy/ch1/front/sagas/user.js"],"names":["all","fork","put","takeLatest","call","takeEvery","SIGN_UP_REQUEST","LOG_IN_SUCCESS","HELLO_SAGA","BYE_SAGA","loginAPI","loginData","login","type","e","console","error","watchLogin","watchHello","userSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,UAAzB,EAAqCC,IAArC,EAA2CC,SAA3C,QAA2D,oBAA3D;AACA,SAASC,eAAT,EAA0BC,cAA1B,QAAgD,kBAAhD;AAEA,MAAMC,UAAU,GAAG,YAAnB;AACA,MAAMC,QAAQ,GAAG,UAAjB;;AAEA,SAASC,QAAT,CAAkBC,SAAlB,EAA4B,CAE3B;;AAED,UAAUC,KAAV,GAAiB;AACb,MAAG;AACC,UAAMR,IAAI,CAACM,QAAD,CAAV;AACA,UAAMR,GAAG,CAAC;AACNW,MAAAA,IAAI,EAAEN;AADA,KAAD,CAAT;AAGH,GALD,CAKE,OAAMO,CAAN,EAAQ;AACNC,IAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACA,UAAMZ,GAAG,CAAC,EAAD,CAAT;AACH;AACJ;;AAED,UAAUe,UAAV,GAAsB;AAClB,QAAMd,UAAU,CAACG,eAAD,EAAkBM,KAAlB,CAAhB;AACH;;AAED,UAAUM,UAAV,GAAsB;AAClB,QAAMb,SAAS,CAACG,UAAD,EAAa,aAAW;AACnC,UAAMN,GAAG,CAAC;AACNW,MAAAA,IAAI,EAAEJ;AADA,KAAD,CAAT;AAGH,GAJc,CAAf;AAKH;;AAED,eAAe,UAAUU,QAAV,GAAoB;AAC/B,QAAMnB,GAAG,CAAC,CACNC,IAAI,CAACgB,UAAD,CADE,EAENhB,IAAI,CAACiB,UAAD,CAFE,CAAD,CAAT;AAIH","sourcesContent":["import { all, fork, put, takeLatest, call, takeEvery} from 'redux-saga/effects';\nimport { SIGN_UP_REQUEST, LOG_IN_SUCCESS } from '../reducers/user';\n\nconst HELLO_SAGA = 'HELLO_SAGA';\nconst BYE_SAGA = 'BYE_SAGA';\n\nfunction loginAPI(loginData){\n\n}\n\nfunction* login(){\n    try{\n        yield call(loginAPI);\n        yield put({\n            type: LOG_IN_SUCCESS\n        });\n    } catch(e){\n        console.error(e);\n        yield put({});\n    }\n}\n\nfunction* watchLogin(){\n    yield takeLatest(SIGN_UP_REQUEST, login);\n}\n\nfunction* watchHello(){\n    yield takeEvery(HELLO_SAGA, function*(){\n        yield put({\n            type: BYE_SAGA\n        });\n    });\n}\n\nexport default function* userSaga(){\n    yield all([\n        fork(watchLogin),\n        fork(watchHello),\n    ])\n}"]},"metadata":{},"sourceType":"module"}