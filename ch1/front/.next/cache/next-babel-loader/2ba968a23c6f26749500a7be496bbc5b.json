{"ast":null,"code":"import { all, fork, put, takeLatest, call, takeEvery, delay } from 'redux-saga/effects';\nimport { SIGN_UP_REQUEST, LOG_IN_SUCCESS } from '../reducers/user';\nconst HELLO_SAGA = 'HELLO_SAGA';\nconst BYE_SAGA = 'BYE_SAGA';\n\nfunction loginAPI(loginData) {\n  console.log('get saga');\n}\n\nfunction* login() {\n  try {\n    yield call(loginAPI);\n    yield put({\n      type: LOG_IN_SUCCESS\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({});\n  }\n}\n\nfunction* watchLogin() {\n  yield takeLatest(SIGN_UP_REQUEST, login);\n}\n\nfunction* watchHello() {\n  yield takeEvery(HELLO_SAGA, function* () {\n    yield delay(3000);\n    yield put({\n      type: BYE_SAGA\n    });\n  });\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogin), fork(watchHello)]);\n}","map":{"version":3,"sources":["/Users/anjoy/popolpodopolapo/proj-blog-anjoy/ch1/front/sagas/user.js"],"names":["all","fork","put","takeLatest","call","takeEvery","delay","SIGN_UP_REQUEST","LOG_IN_SUCCESS","HELLO_SAGA","BYE_SAGA","loginAPI","loginData","console","log","login","type","e","error","watchLogin","watchHello","userSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,UAAzB,EAAqCC,IAArC,EAA2CC,SAA3C,EAAsDC,KAAtD,QAAkE,oBAAlE;AACA,SAASC,eAAT,EAA0BC,cAA1B,QAAgD,kBAAhD;AAEA,MAAMC,UAAU,GAAG,YAAnB;AACA,MAAMC,QAAQ,GAAG,UAAjB;;AAEA,SAASC,QAAT,CAAkBC,SAAlB,EAA4B;AACxBC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACH;;AAED,UAAUC,KAAV,GAAiB;AACb,MAAG;AACC,UAAMX,IAAI,CAACO,QAAD,CAAV;AACA,UAAMT,GAAG,CAAC;AACNc,MAAAA,IAAI,EAAER;AADA,KAAD,CAAT;AAGH,GALD,CAKE,OAAMS,CAAN,EAAQ;AACNJ,IAAAA,OAAO,CAACK,KAAR,CAAcD,CAAd;AACA,UAAMf,GAAG,CAAC,EAAD,CAAT;AACH;AACJ;;AAED,UAAUiB,UAAV,GAAsB;AAClB,QAAMhB,UAAU,CAACI,eAAD,EAAkBQ,KAAlB,CAAhB;AACH;;AAED,UAAUK,UAAV,GAAsB;AAClB,QAAMf,SAAS,CAACI,UAAD,EAAa,aAAW;AACnC,UAAMH,KAAK,CAAC,IAAD,CAAX;AACA,UAAMJ,GAAG,CAAC;AACNc,MAAAA,IAAI,EAAEN;AADA,KAAD,CAAT;AAGH,GALc,CAAf;AAMH;;AAED,eAAe,UAAUW,QAAV,GAAoB;AAC/B,QAAMrB,GAAG,CAAC,CACNC,IAAI,CAACkB,UAAD,CADE,EAENlB,IAAI,CAACmB,UAAD,CAFE,CAAD,CAAT;AAIH","sourcesContent":["import { all, fork, put, takeLatest, call, takeEvery, delay} from 'redux-saga/effects';\nimport { SIGN_UP_REQUEST, LOG_IN_SUCCESS } from '../reducers/user';\n\nconst HELLO_SAGA = 'HELLO_SAGA';\nconst BYE_SAGA = 'BYE_SAGA';\n\nfunction loginAPI(loginData){\n    console.log('get saga');\n}\n\nfunction* login(){\n    try{\n        yield call(loginAPI);\n        yield put({\n            type: LOG_IN_SUCCESS\n        });\n    } catch(e){\n        console.error(e);\n        yield put({});\n    }\n}\n\nfunction* watchLogin(){\n    yield takeLatest(SIGN_UP_REQUEST, login);\n}\n\nfunction* watchHello(){\n    yield takeEvery(HELLO_SAGA, function*(){\n        yield delay(3000);\n        yield put({\n            type: BYE_SAGA\n        });\n    });\n}\n\nexport default function* userSaga(){\n    yield all([\n        fork(watchLogin),\n        fork(watchHello),\n    ])\n}"]},"metadata":{},"sourceType":"module"}