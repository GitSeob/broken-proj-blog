{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nexport const initialState = {\n  mainPosts: [{\n    User: {\n      id: 1,\n      nickname: 'anjoy',\n      profileImage: 'https://scontent-icn1-1.cdninstagram.com/vp/559b8a8ece4f07cf6e7a457f600968b4/5E4BC5CB/t51.2885-15/e35/s1080x1080/72695011_515793855687177_6497185184176620114_n.jpg?_nc_ht=scontent-icn1-1.cdninstagram.com&_nc_cat=1'\n    },\n    postTitle: '테스트',\n    postContent: '대한민국의 가수 겸 탤런트. 본명은 이지은이며, 아이유(IU)는 예명이다. 아이유(IU)는 \"음악으로 너와 내가 하나가 된다\"라는 뜻을 가지고 있다. 2008년에 데뷔하였다. 국민 여동생이라고도 불렸다. 현 시대 여성 솔로 가수 중에서 독보적인 위치를 점하고 있는 한국 가요계의 현재진행형 레전드이자 그 어떤 장르도 소화해내는 만능형 가수라는 평가를 받는다.[22] 로엔 소속 가수 중에 듀엣이나 콜라보 없이 스스로의 힘으로 1위를 기록한 가수는 아이유가 유일하다.',\n    image: 'https://scontent-icn1-1.cdninstagram.com/vp/559b8a8ece4f07cf6e7a457f600968b4/5E4BC5CB/t51.2885-15/e35/s1080x1080/72695011_515793855687177_6497185184176620114_n.jpg?_nc_ht=scontent-icn1-1.cdninstagram.com&_nc_cat=1',\n    commentNumber: 0 // 해당 게시물 댓글 수 \n\n  } // 메인 화면에 보일 콘텐츠들\n  ],\n  userBlog: {\n    User: {\n      id: 1,\n      nickname: 'anjoy',\n      profileImage: 'https://scontent-icn1-1.cdninstagram.com/vp/559b8a8ece4f07cf6e7a457f600968b4/5E4BC5CB/t51.2885-15/e35/s1080x1080/72695011_515793855687177_6497185184176620114_n.jpg?_nc_ht=scontent-icn1-1.cdninstagram.com&_nc_cat=1'\n    },\n    blogTitle: '짜증짜증 블로그',\n    introBlog: '이 블로그는 즐겁지 않습니다.',\n    hashtag: ['#짜증', '#극혐', '#홀리쉿', '#개짜증'] // 특정 유저 블로그 들어가면 포스트 전체 보일 용도\n\n  },\n  addPostErrorReason: '',\n  //포스트 업로드 실패사유\n  isAddingPost: false,\n  //포스트 업로드 중 \n  postAdded: false,\n  isAddingComment: false,\n  commentAdded: false,\n  addCommentErrorReason: '',\n  userPosts: [{\n    id: 1,\n    nickname: 'anjoy',\n    profileImage: 'https://scontent-icn1-1.cdninstagram.com/vp/559b8a8ece4f07cf6e7a457f600968b4/5E4BC5CB/t51.2885-15/e35/s1080x1080/72695011_515793855687177_6497185184176620114_n.jpg?_nc_ht=scontent-icn1-1.cdninstagram.com&_nc_cat=1',\n    postTitle: '테스트',\n    postContent: '대한민국의 가수 겸 탤런트. 본명은 이지은이며, 아이유(IU)는 예명이다. 아이유(IU)는 \"음악으로 너와 내가 하나가 된다\"라는 뜻을 가지고 있다. 2008년에 데뷔하였다. 국민 여동생이라고도 불렸다. 현 시대 여성 솔로 가수 중에서 독보적인 위치를 점하고 있는 한국 가요계의 현재진행형 레전드이자 그 어떤 장르도 소화해내는 만능형 가수라는 평가를 받는다.[22] 로엔 소속 가수 중에 듀엣이나 콜라보 없이 스스로의 힘으로 1위를 기록한 가수는 아이유가 유일하다.',\n    image: 'https://scontent-icn1-1.cdninstagram.com/vp/559b8a8ece4f07cf6e7a457f600968b4/5E4BC5CB/t51.2885-15/e35/s1080x1080/72695011_515793855687177_6497185184176620114_n.jpg?_nc_ht=scontent-icn1-1.cdninstagram.com&_nc_cat=1',\n    comments: [{\n      id: 1,\n      User: {\n        id: 1,\n        nickname: '홍섭'\n      },\n      createdAt: new Date(),\n      content: '더미더미 덤덤 더미 댓글 홍섭짱'\n    }]\n  }]\n};\nexport const LOAD_MAIN_POSTS_REQUEST = 'LOAD_MAIN_POSTS_REQUEST';\nexport const LOAD_MAIN_POSTS_SUCCESS = 'LOAD_MAIN_POSTS_SUCCESS';\nexport const LOAD_MAIN_POSTS_FAILURE = 'LOAD_MAIN_POSTS_FAILURE'; // 메인 화면에 띄워질 포스트들\n\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE'; // 새 포스트 업로드\n\nexport const LOAD_USER_POSTS_REQUEST = 'LOAD_USER_POSTS_REQUEST';\nexport const LOAD_USER_POSTS_SUCCESS = 'LOAD_USER_POSTS_SUCCESS';\nexport const LOAD_USER_POSTS_FAILURE = 'LOAD_USER_POSTS_FAILURE'; // 특정 유저 포스트 \n\nexport const LOAD_HASHING_POSTS_REQUEST = 'LOAD_HASHING_POSTS_REQUEST';\nexport const LOAD_HASHING_POSTS_SUCCESS = 'LOAD_HASHING_POSTS_SUCCESS';\nexport const LOAD_HASHING_POSTS_FAILURE = 'LOAD_HASHING_POSTS_FAILURE'; // 해쉬태그 클릭시 띄워질 포스트들\n// export const REMOVE_IMAGE = 'REMOVE_IMAGE'\n\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE'; // 게시물에 좋아요\n\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE'; // 게시물 좋아요 취소\n\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE'; // 댓글 달기\n\nexport const LOAD_COMMENTS_REQUEST = 'LOAD_COMMENTS_REQUEST';\nexport const LOAD_COMMENTS_SUCCESS = 'LOAD_COMMENTS_SUCCESS';\nexport const LOAD_COMMENTS_FAILURE = 'LOAD_COMMENTS_FAILURE'; // 댓글 불러오기\n// export const RETWEET_REQUEST = 'RETWEET_REQUEST'\n// export const RETWEET_SUCCESS = 'RETWEET_SUCCESS'\n// export const RETWEET_FAILURE = 'RETWEET_FAILURE'\n\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE'; // 게시글 지우기\n\nexport const ADD_DUMMY = 'ADD_DUMMY';\nexport const ADD_TEST_COMMENT = 'ADD_TEST_COMMENT';\nexport const ADD_POST = 'ADD_POST';\nexport const addDummy = {\n  type: ADD_DUMMY,\n  data: {\n    postTitle: 'Hello',\n    postContent: 'fucking rain',\n    User: {\n      nickname: 'test user',\n      profileImage: 'https://scontent-icn1-1.cdninstagram.com/vp/559b8a8ece4f07cf6e7a457f600968b4/5E4BC5CB/t51.2885-15/e35/s1080x1080/72695011_515793855687177_6497185184176620114_n.jpg?_nc_ht=scontent-icn1-1.cdninstagram.com&_nc_cat=1'\n    },\n    image: '',\n    createdAt: new Date()\n  }\n};\nconst dummyComment = {\n  id: 1,\n  User: {\n    id: 1,\n    nickname: '홍섭'\n  },\n  createdAt: new Date(),\n  content: '더미더미 덤덤 더미 댓글 홍섭짱222'\n};\nconst addPost = {\n  type: ADD_POST\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOAD_MAIN_POSTS_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          mainPosts: []\n        });\n      }\n\n    case LOAD_MAIN_POSTS_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          mainPosts: action.data\n        });\n      }\n\n    case LOAD_MAIN_POSTS_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case ADD_POST_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isAddingPost: true,\n          addCommentErrorReason: '',\n          postAdded: false\n        });\n      }\n\n    case ADD_POST_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          isAddingPost: false,\n          postAdded: true,\n          addPostErrorReason: ''\n        });\n      }\n\n    case ADD_POST_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          isAddingComment: false,\n          addPostErrorReason: action.error,\n          isAddingPost: false\n        });\n      }\n\n    case ADD_COMMENT_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isAddingComment: true,\n          addCommentErrorReason: '',\n          commentAdded: false\n        });\n      }\n\n    case ADD_COMMENT_SUCCESS:\n      {\n        // const postIndex = state.mainPosts.findIndex(v => v.id === action.data.postId)\n        // const post = state.mainPosts[postIndex]\n        // const Comments = [...post.Comments, dummyComment]\n        // const mainPosts = [...state.mainPosts]\n        // mainPosts[postIndex] = { ...post, Comments }\n        // // 불변성을 위해 위 같이 수행한다.\n        // return{\n        //     ...state,\n        //     isAddingComment: false,\n        //     mainPosts,\n        //     commentAdded: true,\n        // }\n        const postIndex = state.userPosts.findIndex(v => v.id === action.data.postId);\n        const post = state.userPosts[postIndex];\n        const comments = [...post.comments, dummyComment];\n        const userPosts = [...state.userPosts];\n        userPosts[postIndex] = _objectSpread({}, post, {\n          comments\n        });\n        console.log(userPosts); // 불변성을 위해 위 같이 수행한다.\n\n        return _objectSpread({}, state, {\n          isAddingComment: false,\n          userPosts,\n          commentAdded: true\n        });\n      }\n\n    case ADD_COMMENT_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          isAddingPost: false,\n          addCommentErrorReason: action.error\n        });\n      }\n    // case ADD_TEST_COMMENT: {\n    //     console.log(state.userBlog.userPosts)\n    //     const postIndex = state.userBlog.userPosts.findIndex(v => v.id === action.data.postId)\n    //     console.log(postIndex);\n    //     const post = state.userBlog.userPosts[postIndex]\n    //     console.log(post);\n    //     const comments = [...post.comments, dummyComment]\n    //     const userPosts = [...state.userBlog.userPosts]\n    //     userPosts[postIndex] = { ...post, comments }\n    //     // 불변성을 위해 위 같이 수행한다.\n    //     return{\n    //         ...state,\n    //         isAddingComment: false,\n    //         mainPosts,\n    //         commentAdded: true,\n    //     }\n    // }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/anjoy/popolpodopolapo/proj-blog-anjoy/ch1/front/reducers/post.js"],"names":["initialState","mainPosts","User","id","nickname","profileImage","postTitle","postContent","image","commentNumber","userBlog","blogTitle","introBlog","hashtag","addPostErrorReason","isAddingPost","postAdded","isAddingComment","commentAdded","addCommentErrorReason","userPosts","comments","createdAt","Date","content","LOAD_MAIN_POSTS_REQUEST","LOAD_MAIN_POSTS_SUCCESS","LOAD_MAIN_POSTS_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","LOAD_USER_POSTS_REQUEST","LOAD_USER_POSTS_SUCCESS","LOAD_USER_POSTS_FAILURE","LOAD_HASHING_POSTS_REQUEST","LOAD_HASHING_POSTS_SUCCESS","LOAD_HASHING_POSTS_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","LOAD_COMMENTS_REQUEST","LOAD_COMMENTS_SUCCESS","LOAD_COMMENTS_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_DUMMY","ADD_TEST_COMMENT","ADD_POST","addDummy","type","data","dummyComment","addPost","reducer","state","action","error","postIndex","findIndex","v","postId","post","console","log"],"mappings":"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","sourcesContent":["\nexport const initialState = {\n    mainPosts: [\n        {\n            User: {\n                id: 1,\n                nickname: 'anjoy',\n                profileImage: 'https://scontent-icn1-1.cdninstagram.com/vp/559b8a8ece4f07cf6e7a457f600968b4/5E4BC5CB/t51.2885-15/e35/s1080x1080/72695011_515793855687177_6497185184176620114_n.jpg?_nc_ht=scontent-icn1-1.cdninstagram.com&_nc_cat=1'\n            },\n            postTitle: '테스트',\n            postContent: '대한민국의 가수 겸 탤런트. 본명은 이지은이며, 아이유(IU)는 예명이다. 아이유(IU)는 \"음악으로 너와 내가 하나가 된다\"라는 뜻을 가지고 있다. 2008년에 데뷔하였다. 국민 여동생이라고도 불렸다. 현 시대 여성 솔로 가수 중에서 독보적인 위치를 점하고 있는 한국 가요계의 현재진행형 레전드이자 그 어떤 장르도 소화해내는 만능형 가수라는 평가를 받는다.[22] 로엔 소속 가수 중에 듀엣이나 콜라보 없이 스스로의 힘으로 1위를 기록한 가수는 아이유가 유일하다.',\n            image: 'https://scontent-icn1-1.cdninstagram.com/vp/559b8a8ece4f07cf6e7a457f600968b4/5E4BC5CB/t51.2885-15/e35/s1080x1080/72695011_515793855687177_6497185184176620114_n.jpg?_nc_ht=scontent-icn1-1.cdninstagram.com&_nc_cat=1',\n            commentNumber: 0, // 해당 게시물 댓글 수 \n        }, // 메인 화면에 보일 콘텐츠들\n    ],\n    userBlog:{\n        User: {\n            id: 1,\n            nickname: 'anjoy',\n            profileImage: 'https://scontent-icn1-1.cdninstagram.com/vp/559b8a8ece4f07cf6e7a457f600968b4/5E4BC5CB/t51.2885-15/e35/s1080x1080/72695011_515793855687177_6497185184176620114_n.jpg?_nc_ht=scontent-icn1-1.cdninstagram.com&_nc_cat=1',\n        },\n        blogTitle: '짜증짜증 블로그',\n        introBlog: '이 블로그는 즐겁지 않습니다.',\n        hashtag: ['#짜증', '#극혐', '#홀리쉿', '#개짜증'], // 특정 유저 블로그 들어가면 포스트 전체 보일 용도\n    },\n    addPostErrorReason : '', //포스트 업로드 실패사유\n    isAddingPost: false, //포스트 업로드 중 \n    postAdded: false, \n    isAddingComment: false,\n    commentAdded: false,\n    addCommentErrorReason: '',\n\n    userPosts: [{\n        id: 1,\n        nickname: 'anjoy',\n        profileImage: 'https://scontent-icn1-1.cdninstagram.com/vp/559b8a8ece4f07cf6e7a457f600968b4/5E4BC5CB/t51.2885-15/e35/s1080x1080/72695011_515793855687177_6497185184176620114_n.jpg?_nc_ht=scontent-icn1-1.cdninstagram.com&_nc_cat=1',        \n        postTitle: '테스트',\n        postContent: '대한민국의 가수 겸 탤런트. 본명은 이지은이며, 아이유(IU)는 예명이다. 아이유(IU)는 \"음악으로 너와 내가 하나가 된다\"라는 뜻을 가지고 있다. 2008년에 데뷔하였다. 국민 여동생이라고도 불렸다. 현 시대 여성 솔로 가수 중에서 독보적인 위치를 점하고 있는 한국 가요계의 현재진행형 레전드이자 그 어떤 장르도 소화해내는 만능형 가수라는 평가를 받는다.[22] 로엔 소속 가수 중에 듀엣이나 콜라보 없이 스스로의 힘으로 1위를 기록한 가수는 아이유가 유일하다.',\n        image: 'https://scontent-icn1-1.cdninstagram.com/vp/559b8a8ece4f07cf6e7a457f600968b4/5E4BC5CB/t51.2885-15/e35/s1080x1080/72695011_515793855687177_6497185184176620114_n.jpg?_nc_ht=scontent-icn1-1.cdninstagram.com&_nc_cat=1',\n        comments: [{\n            id: 1,\n            User: {\n                id: 1,\n                nickname:'홍섭'\n            },\n            createdAt: new Date(),\n            content: '더미더미 덤덤 더미 댓글 홍섭짱',\n        },]\n    },],\n\n}\n\nexport const LOAD_MAIN_POSTS_REQUEST = 'LOAD_MAIN_POSTS_REQUEST'\nexport const LOAD_MAIN_POSTS_SUCCESS = 'LOAD_MAIN_POSTS_SUCCESS'\nexport const LOAD_MAIN_POSTS_FAILURE = 'LOAD_MAIN_POSTS_FAILURE'\n// 메인 화면에 띄워질 포스트들\n\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST'\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS'\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE'\n// 새 포스트 업로드\n\nexport const LOAD_USER_POSTS_REQUEST = 'LOAD_USER_POSTS_REQUEST'\nexport const LOAD_USER_POSTS_SUCCESS = 'LOAD_USER_POSTS_SUCCESS'\nexport const LOAD_USER_POSTS_FAILURE = 'LOAD_USER_POSTS_FAILURE'\n// 특정 유저 포스트 \n\nexport const LOAD_HASHING_POSTS_REQUEST = 'LOAD_HASHING_POSTS_REQUEST'\nexport const LOAD_HASHING_POSTS_SUCCESS = 'LOAD_HASHING_POSTS_SUCCESS'\nexport const LOAD_HASHING_POSTS_FAILURE = 'LOAD_HASHING_POSTS_FAILURE'\n// 해쉬태그 클릭시 띄워질 포스트들\n\n// export const REMOVE_IMAGE = 'REMOVE_IMAGE'\n\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST'\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS'\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE'\n// 게시물에 좋아요\n\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST'\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS'\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE'\n// 게시물 좋아요 취소\n\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST'\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS'\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE'\n// 댓글 달기\n\nexport const LOAD_COMMENTS_REQUEST = 'LOAD_COMMENTS_REQUEST'\nexport const LOAD_COMMENTS_SUCCESS = 'LOAD_COMMENTS_SUCCESS'\nexport const LOAD_COMMENTS_FAILURE = 'LOAD_COMMENTS_FAILURE'\n// 댓글 불러오기\n\n// export const RETWEET_REQUEST = 'RETWEET_REQUEST'\n// export const RETWEET_SUCCESS = 'RETWEET_SUCCESS'\n// export const RETWEET_FAILURE = 'RETWEET_FAILURE'\n\n\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST'\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS'\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE'\n// 게시글 지우기\n\nexport const ADD_DUMMY = 'ADD_DUMMY';\nexport const ADD_TEST_COMMENT = 'ADD_TEST_COMMENT';\n\nexport const ADD_POST = 'ADD_POST';\n\nexport const addDummy = {\n    type: ADD_DUMMY,\n    data: {\n        postTitle : 'Hello',\n        postContent : 'fucking rain',\n        User: {\n            nickname: 'test user',\n            profileImage: 'https://scontent-icn1-1.cdninstagram.com/vp/559b8a8ece4f07cf6e7a457f600968b4/5E4BC5CB/t51.2885-15/e35/s1080x1080/72695011_515793855687177_6497185184176620114_n.jpg?_nc_ht=scontent-icn1-1.cdninstagram.com&_nc_cat=1'\n        },\n        image: '',\n        createdAt: new Date(),\n    }\n}\n\nconst dummyComment = {\n    id: 1,\n    User: {\n        id: 1,\n        nickname:'홍섭'\n    },\n    createdAt: new Date(),\n    content: '더미더미 덤덤 더미 댓글 홍섭짱222',\n}\n\nconst addPost = {\n    type: ADD_POST,\n}\n\nconst reducer = (state = initialState, action ) => {\n    switch(action.type){\n\n        case LOAD_MAIN_POSTS_REQUEST:{\n            return{\n                ...state,\n                mainPosts: [],\n            }\n        }\n        case LOAD_MAIN_POSTS_SUCCESS:{\n            return{\n                ...state,\n                mainPosts: action.data\n            }\n        }\n        case LOAD_MAIN_POSTS_FAILURE:{\n            return{\n                ...state,\n            }\n        }\n\n        case ADD_POST_REQUEST:{\n            return{\n                ...state,\n                isAddingPost: true,\n                addCommentErrorReason: '',\n                postAdded: false\n            }\n        }\n        case ADD_POST_SUCCESS:{\n            return{\n                ...state,\n                isAddingPost: false,\n                postAdded: true,\n                addPostErrorReason: ''\n            }\n        }\n        case ADD_POST_FAILURE:{\n            return{\n                ...state,\n                isAddingComment: false,\n                addPostErrorReason: action.error,\n                isAddingPost: false\n            }\n        }\n\n        case ADD_COMMENT_REQUEST:{\n            return{\n                ...state,\n                isAddingComment: true,\n                addCommentErrorReason: '',\n                commentAdded: false,\n            }\n        }\n        case ADD_COMMENT_SUCCESS:{\n            // const postIndex = state.mainPosts.findIndex(v => v.id === action.data.postId)\n            // const post = state.mainPosts[postIndex]\n            // const Comments = [...post.Comments, dummyComment]\n            // const mainPosts = [...state.mainPosts]\n            // mainPosts[postIndex] = { ...post, Comments }\n            // // 불변성을 위해 위 같이 수행한다.\n            // return{\n            //     ...state,\n            //     isAddingComment: false,\n            //     mainPosts,\n            //     commentAdded: true,\n            // }\n            const postIndex = state.userPosts.findIndex(v => v.id === action.data.postId)\n            \n            const post = state.userPosts[postIndex]\n            \n            const comments = [...post.comments, dummyComment]\n\n            const userPosts = [...state.userPosts]\n\n            userPosts[postIndex] = { ...post, comments }\n            console.log(userPosts);\n            // 불변성을 위해 위 같이 수행한다.\n            return{\n                ...state,\n                isAddingComment: false,\n                userPosts,\n                commentAdded: true,\n            }\n        }\n        case ADD_COMMENT_FAILURE:{\n            return{\n                ...state,\n                isAddingPost: false,\n                addCommentErrorReason: action.error\n            }\n        }\n\n        // case ADD_TEST_COMMENT: {\n        //     console.log(state.userBlog.userPosts)\n        //     const postIndex = state.userBlog.userPosts.findIndex(v => v.id === action.data.postId)\n        //     console.log(postIndex);\n        //     const post = state.userBlog.userPosts[postIndex]\n        //     console.log(post);\n        //     const comments = [...post.comments, dummyComment]\n        //     const userPosts = [...state.userBlog.userPosts]\n        //     userPosts[postIndex] = { ...post, comments }\n        //     // 불변성을 위해 위 같이 수행한다.\n        //     return{\n        //         ...state,\n        //         isAddingComment: false,\n        //         mainPosts,\n        //         commentAdded: true,\n        //     }\n        // }\n\n        default: {\n            return {\n                ...state\n            }\n        }\n    }\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}