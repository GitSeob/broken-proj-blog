{"ast":null,"code":"import { all, fork, takeLatest, put } from 'redux-saga/effects';\nimport { ADD_COMMENT_REQUEST, ADD_COMMENT_FAILURE, ADD_COMMENT_SUCCESS } from '../reducers/post';\nimport { Result } from 'antd';\n\nfunction addCommentAPI() {}\n\nfunction* addComment(action) {\n  try {\n    // yield delay(2000)\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: {\n        postId: action.data.postId,\n        comment: action.data.content\n      }\n    });\n  } catch (e) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddComment)]);\n}","map":{"version":3,"sources":["/Users/anjoy/popolpodopolapo/proj-blog-anjoy/ch1/front/sagas/post.js"],"names":["all","fork","takeLatest","put","ADD_COMMENT_REQUEST","ADD_COMMENT_FAILURE","ADD_COMMENT_SUCCESS","Result","addCommentAPI","addComment","action","type","data","postId","comment","content","e","error","watchAddComment","postSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,UAApB,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,SAASC,mBAAT,EAA8BC,mBAA9B,EAAmDC,mBAAnD,QAA8E,kBAA9E;AACA,SAASC,MAAT,QAAuB,MAAvB;;AAEA,SAASC,aAAT,GAAwB,CAEvB;;AAED,UAAUC,UAAV,CAAqBC,MAArB,EAA4B;AACxB,MAAG;AACC;AACA,UAAMP,GAAG,CAAC;AACNQ,MAAAA,IAAI,EAAEL,mBADA;AAENM,MAAAA,IAAI,EAAE;AACFC,QAAAA,MAAM,EAAEH,MAAM,CAACE,IAAP,CAAYC,MADlB;AAEFC,QAAAA,OAAO,EAAEJ,MAAM,CAACE,IAAP,CAAYG;AAFnB;AAFA,KAAD,CAAT;AAOH,GATD,CASE,OAAMC,CAAN,EAAQ;AACN,UAAMb,GAAG,CAAC;AACNQ,MAAAA,IAAI,EAAEN,mBADA;AAENY,MAAAA,KAAK,EAAED;AAFD,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUE,eAAV,GAA2B;AACvB,QAAMhB,UAAU,CAACE,mBAAD,EAAsBK,UAAtB,CAAhB;AACH;;AAED,eAAe,UAAUU,QAAV,GAAoB;AAC/B,QAAMnB,GAAG,CAAC,CACNC,IAAI,CAACiB,eAAD,CADE,CAAD,CAAT;AAGH","sourcesContent":["import { all, fork, takeLatest, put } from 'redux-saga/effects';\nimport { ADD_COMMENT_REQUEST, ADD_COMMENT_FAILURE, ADD_COMMENT_SUCCESS } from '../reducers/post';\nimport { Result } from 'antd';\n\nfunction addCommentAPI(){\n\n}\n\nfunction* addComment(action){\n    try{\n        // yield delay(2000)\n        yield put({\n            type: ADD_COMMENT_SUCCESS,\n            data: {\n                postId: action.data.postId,\n                comment: action.data.content,\n            }\n        })\n    } catch(e){\n        yield put({\n            type: ADD_COMMENT_FAILURE,\n            error: e\n        })\n    }\n}\n\nfunction* watchAddComment(){\n    yield takeLatest(ADD_COMMENT_REQUEST, addComment)\n}\n\nexport default function* postSaga(){\n    yield all([\n        fork(watchAddComment),\n    ]);\n}"]},"metadata":{},"sourceType":"module"}