{"ast":null,"code":"var _jsxFileName = \"/Users/anjoy/popolpodopolapo/proj-blog-anjoy/ch1/front/components/FullPost.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useCallback, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport NameCard from './NameCard';\nimport Comments from './Comments';\nimport { ADD_TEST_COMMENT, ADD_COMMENT_REQUEST } from '../reducers/post';\n\nvar FullPost = function FullPost(_ref) {\n  var post = _ref.post;\n\n  var _useState = useState(false),\n      commentFormOpened = _useState[0],\n      setCommentFormOpened = _useState[1]; // const { userBlog } = useSelector(state=>state.post)\n\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me;\n\n  var _useState2 = useState(''),\n      commentText = _useState2[0],\n      setCommentText = _useState2[1];\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.post;\n  }),\n      commentAdded = _useSelector2.commentAdded,\n      isAddingComment = _useSelector2.isAddingComment,\n      addCommentErrorReason = _useSelector2.addCommentErrorReason;\n\n  var dispatch = useDispatch();\n  useEffect(function () {\n    setCommentText('');\n  }, [commentAdded == true]);\n  var onToggleComment = useCallback(function () {\n    setCommentFormOpened(function (prev) {\n      return !prev;\n    });\n  });\n  var onSubmitComment = useCallback(function (e) {\n    e.preventDefault();\n\n    if (!me) {\n      return alert('댓글을 달려면 로그인을 하십시오.');\n    }\n\n    ;\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content: commentText,\n        postId: post.id\n      }\n    });\n  }, [me && me.id, commentText]);\n  var onChangeCommentText = useCallback(function (e) {\n    setCommentText(e.target.value);\n  }, []);\n  return __jsx(\"div\", {\n    key: +post.createdAt,\n    style: {\n      borderRadius: '5px',\n      backgroundColor: 'white',\n      margin: '1.5rem 0',\n      boxShadow: '0 0 4px #999',\n      display: 'flex',\n      flexDirection: 'column',\n      alignContent: 'center',\n      justifyContent: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      borderBottom: '1px solid #e9ecef',\n      margin: '0 1rem 1rem 1rem'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    style: {\n      marginTop: '1rem',\n      fontSize: '14px',\n      color: '#e9ecef'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, post.createdAt), __jsx(\"h1\", {\n    style: {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, post.postTitle)), __jsx(NameCard, {\n    user: post,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), __jsx(\"p\", {\n    style: {\n      margin: '1rem',\n      borderBottom: '1px solid #e9ecef',\n      paddingBottom: '1rem'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, post.postContent), __jsx(\"a\", {\n    onClick: onToggleComment,\n    style: {\n      margin: '0 1rem'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    style: {\n      right: 0\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"\\uB313\\uAE00 0\\uAC1C\")), commentFormOpened && __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: {\n      position: 'relative',\n      margin: '0 1rem'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, post.comments.map(function (c) {\n    return __jsx(Comments, {\n      comm: c,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    });\n  })), __jsx(\"form\", {\n    onSubmit: onSubmitComment,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    type: \"text\",\n    value: commentText,\n    onChange: onChangeCommentText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), __jsx(\"input\", {\n    type: \"submit\",\n    value: \"\\uC791\\uC131\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }))));\n};\n\nFullPost.propTypes = {};\nexport default FullPost;","map":{"version":3,"sources":["/Users/anjoy/popolpodopolapo/proj-blog-anjoy/ch1/front/components/FullPost.js"],"names":["React","useState","useCallback","useEffect","PropTypes","useSelector","useDispatch","NameCard","Comments","ADD_TEST_COMMENT","ADD_COMMENT_REQUEST","FullPost","post","commentFormOpened","setCommentFormOpened","state","user","me","commentText","setCommentText","commentAdded","isAddingComment","addCommentErrorReason","dispatch","onToggleComment","prev","onSubmitComment","e","preventDefault","alert","type","data","content","postId","id","onChangeCommentText","target","value","createdAt","borderRadius","backgroundColor","margin","boxShadow","display","flexDirection","alignContent","justifyContent","borderBottom","marginTop","fontSize","color","postTitle","paddingBottom","postContent","right","position","comments","map","c","propTypes"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,EAAuCC,SAAvC,QAAwD,OAAxD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,gBAAT,EAA2BC,mBAA3B,QAAsD,kBAAtD;;AAGA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAc;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AAAA,kBACuBX,QAAQ,CAAC,KAAD,CAD/B;AAAA,MACpBY,iBADoB;AAAA,MACDC,oBADC,iBAE3B;;;AAF2B,qBAGZT,WAAW,CAAC,UAAAU,KAAK;AAAA,WAAEA,KAAK,CAACC,IAAR;AAAA,GAAN,CAHC;AAAA,MAGnBC,EAHmB,gBAGnBA,EAHmB;;AAAA,mBAIahB,QAAQ,CAAC,EAAD,CAJrB;AAAA,MAInBiB,WAJmB;AAAA,MAINC,cAJM;;AAAA,sBAKsCd,WAAW,CAAC,UAAAU,KAAK;AAAA,WAAEA,KAAK,CAACH,IAAR;AAAA,GAAN,CALjD;AAAA,MAKnBQ,YALmB,iBAKnBA,YALmB;AAAA,MAKLC,eALK,iBAKLA,eALK;AAAA,MAKYC,qBALZ,iBAKYA,qBALZ;;AAM3B,MAAMC,QAAQ,GAAGjB,WAAW,EAA5B;AAEAH,EAAAA,SAAS,CAAC,YAAI;AACVgB,IAAAA,cAAc,CAAC,EAAD,CAAd;AACH,GAFQ,EAEN,CAACC,YAAY,IAAI,IAAjB,CAFM,CAAT;AAIA,MAAMI,eAAe,GAAGtB,WAAW,CAAC,YAAM;AACtCY,IAAAA,oBAAoB,CAAC,UAAAW,IAAI;AAAA,aAAI,CAACA,IAAL;AAAA,KAAL,CAApB;AACH,GAFkC,CAAnC;AAIA,MAAMC,eAAe,GAAGxB,WAAW,CAAC,UAACyB,CAAD,EAAK;AACrCA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAG,CAACX,EAAJ,EAAO;AACH,aAAOY,KAAK,CAAC,oBAAD,CAAZ;AACH;;AAAA;AAEDN,IAAAA,QAAQ,CAAC;AACLO,MAAAA,IAAI,EAAEpB,mBADD;AAELqB,MAAAA,IAAI,EAAE;AACFC,QAAAA,OAAO,EAAEd,WADP;AAEFe,QAAAA,MAAM,EAAErB,IAAI,CAACsB;AAFX;AAFD,KAAD,CAAR;AAOH,GAbkC,EAahC,CAACjB,EAAE,IAAIA,EAAE,CAACiB,EAAV,EAAchB,WAAd,CAbgC,CAAnC;AAeA,MAAMiB,mBAAmB,GAAGjC,WAAW,CAAC,UAACyB,CAAD,EAAK;AACzCR,IAAAA,cAAc,CAACQ,CAAC,CAACS,MAAF,CAASC,KAAV,CAAd;AACH,GAFsC,EAEpC,EAFoC,CAAvC;AAKA,SACI;AACI,IAAA,GAAG,EAAE,CAACzB,IAAI,CAAC0B,SADf;AAEI,IAAA,KAAK,EAAE;AACHC,MAAAA,YAAY,EAAC,KADV;AAEHC,MAAAA,eAAe,EAAC,OAFb;AAGHC,MAAAA,MAAM,EAAE,UAHL;AAIHC,MAAAA,SAAS,EAAE,cAJR;AAKHC,MAAAA,OAAO,EAAC,MALL;AAMHC,MAAAA,aAAa,EAAC,QANX;AAOHC,MAAAA,YAAY,EAAC,QAPV;AAQHC,MAAAA,cAAc,EAAC;AARZ,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAaI;AAAK,IAAA,KAAK,EAAE;AACRH,MAAAA,OAAO,EAAC,MADA;AAERC,MAAAA,aAAa,EAAC,QAFN;AAGRG,MAAAA,YAAY,EAAC,mBAHL;AAIRN,MAAAA,MAAM,EAAC;AAJC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMI;AAAG,IAAA,KAAK,EAAE;AAACO,MAAAA,SAAS,EAAC,MAAX;AAAkBC,MAAAA,QAAQ,EAAC,MAA3B;AAAmCC,MAAAA,KAAK,EAAC;AAAzC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgEtC,IAAI,CAAC0B,SAArE,CANJ,EAOI;AAAI,IAAA,KAAK,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgB1B,IAAI,CAACuC,SAArB,CAPJ,CAbJ,EAsBI,MAAC,QAAD;AAAU,IAAA,IAAI,EAAEvC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtBJ,EAuBI;AAAG,IAAA,KAAK,EAAE;AAAC6B,MAAAA,MAAM,EAAC,MAAR;AAAgBM,MAAAA,YAAY,EAAC,mBAA7B;AAAkDK,MAAAA,aAAa,EAAC;AAAhE,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoFxC,IAAI,CAACyC,WAAzF,CAvBJ,EAwBI;AAAG,IAAA,OAAO,EAAE7B,eAAZ;AAA6B,IAAA,KAAK,EAAE;AAACiB,MAAAA,MAAM,EAAC;AAAR,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,KAAK,EAAE;AAACa,MAAAA,KAAK,EAAC;AAAP,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,CAxBJ,EA2BKzC,iBAAiB,IACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,KAAK,EAAE;AAAC0C,MAAAA,QAAQ,EAAC,UAAV;AAAsBd,MAAAA,MAAM,EAAC;AAA7B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK7B,IAAI,CAAC4C,QAAL,CAAcC,GAAd,CAAkB,UAACC,CAAD,EAAM;AACrB,WACI,MAAC,QAAD;AAAU,MAAA,IAAI,EAAEA,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH,GAJA,CADL,CADA,EAQI;AAAM,IAAA,QAAQ,EAAEhC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,KAAK,EAAER,WAA1B;AAAuC,IAAA,QAAQ,EAAEiB,mBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAC,cAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CARJ,CA5BR,CADJ;AA8CH,CAlFD;;AAoFAxB,QAAQ,CAACgD,SAAT,GAAqB,EAArB;AAIA,eAAehD,QAAf","sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport NameCard from './NameCard';\nimport Comments from './Comments';\nimport { ADD_TEST_COMMENT, ADD_COMMENT_REQUEST } from '../reducers/post';\n\n\nconst FullPost = ({ post }) => {\n    const [commentFormOpened, setCommentFormOpened] = useState(false)\n    // const { userBlog } = useSelector(state=>state.post)\n    const { me } = useSelector(state=>state.user);\n    const [ commentText, setCommentText ] = useState('');\n    const { commentAdded, isAddingComment, addCommentErrorReason } = useSelector(state=>state.post);\n    const dispatch = useDispatch();\n\n    useEffect(()=>{\n        setCommentText('');\n    }, [commentAdded == true])\n\n    const onToggleComment = useCallback(() => {\n        setCommentFormOpened(prev => !prev)\n    });\n\n    const onSubmitComment = useCallback((e)=>{\n        e.preventDefault();\n        if(!me){\n            return alert('댓글을 달려면 로그인을 하십시오.')\n        };\n        \n        dispatch({\n            type: ADD_COMMENT_REQUEST,\n            data: {\n                content: commentText,\n                postId: post.id,\n            }\n        })\n    }, [me && me.id, commentText]);\n\n    const onChangeCommentText = useCallback((e)=>{\n        setCommentText(e.target.value);\n    }, [])\n\n\n    return (\n        <div \n            key={+post.createdAt}\n            style={{\n                borderRadius:'5px', \n                backgroundColor:'white', \n                margin: '1.5rem 0', \n                boxShadow: '0 0 4px #999',\n                display:'flex', \n                flexDirection:'column', \n                alignContent:'center',\n                justifyContent:'center'\n            }}\n        >\n            <div style={{\n                display:'flex', \n                flexDirection:'column',\n                borderBottom:'1px solid #e9ecef', \n                margin:'0 1rem 1rem 1rem'}}\n            >\n                <p style={{marginTop:'1rem',fontSize:'14px', color:'#e9ecef'}}>{post.createdAt}</p>\n                <h1 style={{}}>{post.postTitle}</h1>\n            </div>\n            <NameCard user={post} />\n            <p style={{margin:'1rem', borderBottom:'1px solid #e9ecef', paddingBottom:'1rem'}}>{post.postContent}</p>\n            <a onClick={onToggleComment} style={{margin:'0 1rem'}}>\n                <p style={{right:0}}>댓글 0개</p>\n            </a>\n            {commentFormOpened && \n                <div>\n                <div style={{position:'relative', margin:'0 1rem'}}>\n                    {post.comments.map((c)=> {\n                        return (\n                            <Comments comm={c}/>\n                        );\n                    })}\n                </div>\n                    <form onSubmit={onSubmitComment}>\n                        <input type=\"text\" value={commentText} onChange={onChangeCommentText}/>\n                        <br/>\n                        <input type=\"submit\" value=\"작성\"/>\n                    </form>\n                </div>\n            }\n        </div>\n    );\n};\n\nFullPost.propTypes = {\n    \n};\n\nexport default FullPost;"]},"metadata":{},"sourceType":"module"}