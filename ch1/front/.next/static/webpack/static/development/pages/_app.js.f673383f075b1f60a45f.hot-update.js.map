{"version":3,"file":"static/webpack/static/development/pages/_app.js.f673383f075b1f60a45f.hot-update.js","sources":["webpack:///./sagas/user.js"],"sourcesContent":["import { all, fork, put, takeLatest, call, takeEvery, delay} from 'redux-saga/effects';\nimport { SIGN_UP_REQUEST, LOG_IN_SUCCESS } from '../reducers/user';\n\nconst HELLO_SAGA = 'HELLO_SAGA';\nconst BYE_SAGA = 'BYE_SAGA';\n\nfunction loginAPI(loginData){\n    console.log('get saga');\n}\n\nfunction* login(){\n    try{\n        yield call(loginAPI);\n        yield put({\n            type: LOG_IN_SUCCESS\n        });\n    } catch(e){\n        console.error(e);\n        yield put({});\n    }\n}\n\nfunction* watchLogin(){\n    yield takeLatest(SIGN_UP_REQUEST, login);\n}\n\nfunction* watchHello(){\n    yield takeEvery(HELLO_SAGA, function*(){\n        yield delay(3000);\n        yield put({\n            type: BYE_SAGA\n        });\n    });\n}\n\nexport default function* userSaga(){\n    yield all([\n        fork(watchLogin),\n        fork(watchHello),\n    ])\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;AAUA;;;AAYA;;;AAIA;;;AASA;AACA;AApsourceRoot":""}