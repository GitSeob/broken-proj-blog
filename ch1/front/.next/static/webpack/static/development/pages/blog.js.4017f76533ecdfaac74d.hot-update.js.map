{"version":3,"file":"static/webpack/static/development/pages/blog.js.4017f76533ecdfaac74d.hot-update.js","sources":["webpack:///./components/FullPost.js"],"sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport NameCard from './NameCard';\nimport Comments from './Comments';\nimport { ADD_TEST_COMMENT, ADD_COMMENT_REQUEST } from '../reducers/post';\n\n\nconst FullPost = ({ post }) => {\n    const [commentFormOpened, setCommentFormOpened] = useState(false)\n    // const { userBlog } = useSelector(state=>state.post)\n    const { me } = useSelector(state=>state.user);\n    const [ commentText, setCommentText ] = useState('');\n    const { commentAdded, isAddingComment, addCommentErrorReason } = useSelector(state=>state.post);\n    const dispatch = useDispatch();\n\n    useEffect(()=>{\n        setCommentText('');\n    }, [commentAdded == true])\n\n    const onToggleComment = useCallback(() => {\n        setCommentFormOpened(prev => !prev)\n    });\n\n    const onSubmitComment = useCallback((e)=>{\n        e.preventDefault();\n        if(!me){\n            return alert('댓글을 달려면 로그인을 하십시오.')\n        };\n        \n        dispatch({\n            type: ADD_COMMENT_REQUEST,\n            data: {\n                content: commentText,\n                postId: post.id,\n            }\n        })\n    }, [me && me.id, commentText]);\n\n    const onChangeCommentText = useCallback((e)=>{\n        setCommentText(e.target.value);\n    }, [])\n\n\n    return (\n        <div \n            key={+post.createdAt}\n            style={{\n                borderRadius:'5px', \n                backgroundColor:'white', \n                margin: '1.5rem 0', \n                boxShadow: '0 0 4px #999',\n                display:'flex', \n                flexDirection:'column', \n                alignContent:'center',\n                justifyContent:'center'\n            }}\n        >\n            <div style={{\n                display:'flex', \n                flexDirection:'column',\n                borderBottom:'1px solid #e9ecef', \n                margin:'0 1rem 1rem 1rem'}}\n            >\n                <p style={{marginTop:'1rem',fontSize:'14px', color:'#e9ecef'}}>{post.createdAt}</p>\n                <h1 style={{}}>{post.postTitle}</h1>\n            </div>\n            <NameCard user={post} />\n            <p style={{margin:'1rem', borderBottom:'1px solid #e9ecef', paddingBottom:'1rem'}}>{post.postContent}</p>\n            <a onClick={onToggleComment} style={{margin:'0 1rem'}}>\n                <p style={{right:0}}>댓글 0개</p>\n            </a>\n            {commentFormOpened && \n                <div>\n                <div style={{position:'relative', margin:'0 1rem'}}>\n                    {post.comments.map((c)=> {\n                        return (\n                            <Comments comm={c}/>\n                        );\n                    })}\n                </div>\n                    <form onSubmit={onSubmitComment}>\n                        <input type=\"text\" value={commentText} onChange={onChangeCommentText}/>\n                        <br/>\n                        <input type=\"submit\" value=\"작성\"/>\n                    </form>\n                </div>\n            }\n        </div>\n    );\n};\n\nFullPost.propTypes = {\n    \n};\n\nexport default FullPost;"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AACA;AAFA;AAGA;AAAA;AAHA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAKA;AAAA;AALA;AAAA;AAAA;AACA;AAKA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AADA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAFA;AAOA;AAEA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AAIA;;;;A","sourceRoot":""}